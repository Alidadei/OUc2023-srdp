***************************BUG经验积累 --没有哪个软件是没有bug的，vscode也经常有bug，所以包容一下keil吧！************************************************************
1、 error: #268: declaration may not appear after executable statement in block
	这是说对变量的声明不可以放在“第一条”可执行语句之后，也就是说变量的声明必须放在一个函数的开头！
	
2、遇到报错在“.o"文件的，并且反复查找却找不出错的（doge），可以尝试把keil关掉重新开一下

**注：keil文件的编译过程为：“.c  > .i > .s > .o > …”先是预处理生成 .i 文件，
.i 文件就是.c按照预处理命令处理后的文件，注释删了，该替换的替换该包含的包含
然后由 .i 编译生成 .s ，就是汇编代码，（比如启动文件那样的）由.s 汇编成 .o ，
.o 是机器码，用记事本打开会发现全是十六进制代码最后是链接，把附带的静态库动态库加进去生成最终的文件


********************************************利用函数指针数组创建哈希表**********************************
//具体的外设控制函数
void Light_Open(void);
void Light_Shut(void);
void Light_Up(void);
void Light_Down(void);
void FAN_Open(void);
void FAN_Shut(void);
void FAN_Up(void);
void FAN_Down(void);
u8 cmd;
//外设控制函数的指针数组，相当于一个哈希表(在哪个文件里调用就在哪里定义！)
void(*Voice_ctr_func[8])(void)= { Light_Open, Light_Shut, Light_Up, Light_Down,
                                  FAN_Open,     FAN_Shut,    FAN_Up,FAN_Down
 
};

Voice_ctr_func[cmd]();//直接通过函数指针数组来调用对应的控制函数，相当于哈希查找！
**************************************************************************************************************
